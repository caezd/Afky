{"version":3,"file":"afky.js","sources":["../src/index.js"],"sourcesContent":["import \"./style.css\";\r\n\r\nfunction forceFirstPaint(map) {\r\n    map.resize();\r\n    map.jumpTo({ center: map.getCenter(), zoom: map.getZoom() });\r\n    if (map.triggerRepaint) map.triggerRepaint();\r\n}\r\n\r\nfunction main() {\r\n    new Honey({\r\n        index_box: function (data) {\r\n            console.log(data);\r\n            const maps = {};\r\n            const forums = {};\r\n            data.categories[0].forums.forEach(function (forum) {\r\n                forums[forum.name] = forum;\r\n                maps[forum.name] = new maplibregl.Map({\r\n                    container: `${forum.name}`,\r\n                    style: { version: 8, sources: {}, layers: [] },\r\n                    center: [0, 0],\r\n                    zoom: 1,\r\n                    minZoom: 0,\r\n                    maxZoom: 3,\r\n                    trackResize: true,\r\n                    attributionControl: false,\r\n                });\r\n            });\r\n            // loops des maps\r\n            for (const mapName in maps) {\r\n                const map = maps[mapName];\r\n\r\n                try {\r\n                    const forumRes = fetch(`/${forums[mapName]?.id}-forum`)\r\n                        .then((res) => res.text())\r\n                        .then((result) => {\r\n                            // 1) Parser le HTML\r\n                            const parser = new DOMParser();\r\n                            const doc = parser.parseFromString(\r\n                                result,\r\n                                \"text/html\"\r\n                            );\r\n\r\n                            // 2) Regex pour détecter [x,y] (espaces optionnels, décimaux, +/-)\r\n                            const coordRe =\r\n                                /\\[\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\]/;\r\n\r\n                            // 3) Récupérer tous les <a> qui matchent\r\n                            const anchors = Array.from(\r\n                                doc.querySelectorAll(\"a\")\r\n                            );\r\n                            const matches = anchors.filter((a) =>\r\n                                coordRe.test(a.textContent || \"\")\r\n                            );\r\n\r\n                            // 4a) Si tu veux juste l’HTML complet de chaque <a>\r\n                            const anchorsHTML = matches.map((a) => a.outerHTML);\r\n\r\n                            const anchorsWithCoords = matches.map((a) => {\r\n                                const m = (a.textContent || \"\").match(coordRe);\r\n                                const coords = m\r\n                                    ? [Number(m[1]), Number(m[2])]\r\n                                    : null;\r\n                                return {\r\n                                    outerHTML: a.outerHTML,\r\n                                    coords, // ex: [12.34, -56.78]\r\n                                    text: a.textContent?.trim() || \"\",\r\n                                    href: a.getAttribute(\"href\") || null,\r\n                                };\r\n                            });\r\n\r\n                            anchorsWithCoords.forEach((a) => {\r\n                                if (!a.coords) return;\r\n\r\n                                new maplibregl.Marker({ color: \"#d1193e\" })\r\n                                    .setLngLat(a.coords)\r\n                                    .setPopup(\r\n                                        new maplibregl.Popup({\r\n                                            offset: 16,\r\n                                        }).setHTML(\r\n                                            `<div class=\"marker-popup\"><strong>Position</strong><br/>${a.text}</div>`\r\n                                        )\r\n                                    )\r\n                                    .addTo(map);\r\n                            });\r\n                        });\r\n                } catch (e) {\r\n                    console.error(`Failed to fetch forum ${forumId}:`, e);\r\n                }\r\n\r\n                map.on(\"click\", (e) => {\r\n                    // The event object (e) contains information like the\r\n                    // coordinates of the point on the map that was clicked.\r\n                    console.log(\"A click event has occurred at \" + e.lngLat);\r\n                });\r\n\r\n                map.on(\"load\", () => {\r\n                    map.setRenderWorldCopies(false);\r\n                    map.addSource(\"r\", {\r\n                        type: \"raster\",\r\n                        tiles: [\r\n                            `http://127.0.0.1:8080/${mapName}/{z}/{y}/{x}.webp`,\r\n                        ],\r\n                        tileSize: 512,\r\n                        minzoom: 0,\r\n                        maxzoom: 3,\r\n                        scheme: \"xyz\",\r\n                    });\r\n                    map.addLayer({ id: \"r\", type: \"raster\", source: \"r\" });\r\n                    forceFirstPaint(map);\r\n                });\r\n            }\r\n\r\n            return data;\r\n        },\r\n    });\r\n}\r\nmain();\r\n"],"names":[],"mappings":"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"}